---
- name: Start Linkwarden
  block:
    - name: Create Linkwarden Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: yes
      with_items:
        - "{{ linkwarden_data_directory }}/linkwarden"
        - "{{ linkwarden_data_directory }}/pgsql"

        
    - name: Create Postgres container for Linkwarden
      community.docker.docker_container:
        name: "{{ linkwarden_pgsql_container_name }}"
        image: "{{ linkwarden_pgsql_image_name }}:{{ linkwarden_pgsql_image_version }}"
        pull: true
        volumes:
          - "{{ linkwarden_data_directory }}/pgsql:/var/lib/postgresql/data:rw"
        env:
          POSTGRES_PASSWORD: "{{linkwarden_pgsql_password}}"
        restart_policy: unless-stopped
        memory: "{{ linkwarden_pgsql_memory }}"

    - name: Linkwarden Docker Container
      community.docker.docker_container:
        name: "{{ linkwarden_container_name }}"
        image: "{{ linkwarden_image_name }}:{{ linkwarden_image_version }}"
        pull: true
        ports:
          - "{{ linkwarden_port }}:3000"
        links:
          - linkwarden-postgres:db
        volumes:
          - "{{ linkwarden_data_directory }}:/data/data:rw"
        env:
          DATABASE_URL: "postgresql://postgres:{{linkwarden_pgsql_password}}@db:5432/postgres"
          NEXTAUTH_SECRET: "{{linkwarden_nextauth_secret}}"
          NEXTAUTH_URL: "http://{{ ansible_nas_hostname }}:{{ linkwarden_port }}/api/v1/auth"
        memory: "{{ linkwarden_memory }}"
        labels:
          traefik.enable: "{{ linkwarden_available_externally | string }}"
          traefik.http.routers.linkwarden.rule: "Host(`{{ linkwarden_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.linkwarden.tls.certresolver: "letsencrypt"
          traefik.http.routers.linkwarden.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.linkwarden.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.linkwarden.loadbalancer.server.port: "3000"
          homepage.group: "System"
          homepage.name: "Linkwarden"
          homepage.icon: "linkwarden"
          homepage.href: "http://{{ ansible_nas_hostname }}:{{ linkwarden_port }}"
          homepage.description: Bookmark tool
          homepage.widget.type: linkwarden
          homepage.widget.url: "http://{{ ansible_nas_hostname }}:{{ linkwarden_port }}"
          homepage.widget.key: "{{ linkwarden_token }}"
        restart_policy: unless-stopped
  when: linkwarden_enabled is true

- name: Stop Linkwarden
  block:
    - name: Stop Linkwarden
      community.docker.docker_container:
        name: "{{ linkwarden_container_name }}"
        state: absent
    - name: Stop Linkwarden Postgres
      community.docker.docker_container:
        name: "{{ linkwarden_pgsql_container_name }}"
        state: absent
  when: linkwarden_enabled is false